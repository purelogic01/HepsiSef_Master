@model HepsiSef.Presentation.Models.ResetPasswordVM


<div class="banner banner-blog">
    <div class="container ">
        <div class="main-heading">
            <h1>Şifre sıfırlama</h1>
        </div>
    </div>
</div>
@*<p v-if="response.validationErrors.some(x => x.key == 'code' )">
        {{ response.validationErrors.find(x => x.key == 'code').value }}
    </p>*@

<!--body-->
<div class="container" id="forgetpasswordForm">
    <div class="row">
        <form class="col-md-4 offset-md-4">

            <div class="form-group">
                <label for="exampleInputPassword">Şifre</label>
                <input v-model="form.password" type="password" class="form-control" id="exampleInputPassword"
                       placeholder="lütfen şifrenizi giriniz">
                <p v-if="response.validationErrors.some(x => x.key == 'password')">
                    {{ response.validationErrors.find(x => x.key == 'password').value }}
                </p>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword-Retry">Şifre tekrar</label>
                <input v-model="form.passwordretry" type="password" class="form-control"
                       id="exampleInputPassword-Retry" placeholder="lütfen şifrenizi tekrar giriniz">
                <p v-if="response.validationErrors.some(x => x.key == 'passwordretry')">
                    {{ response.validationErrors.find(x => x.key == 'passwordretry').value }}
                </p>
            </div>
            <div class="col-md-6" v-if="!loading">
                <button @@click="save" type="button" class="btn btn-primary">Kaydet</button>
                <p v-if="response.hasError">{{ response.message }}</p>
            </div>
        </form>
    </div>
</div>

<script>
    var vm = new Vue({
  el: '#forgetpasswordForm',
  data: function() {
       return {
         loading: false,
           form: {
                code: '@Model.Code',
                password: null,
                passwordretry: null
           },
           response: {
                hasError:false,
                validationErrors:[],
                message: null
           }
       }
  },
    methods: {
        save() {
     this.loading = true;

            axios.post("login/repassword", this.form).then((res) => {
                this.response = res.data;

                if(res.data.hasError)
                {

                }
                else
                {
                   window.location.href = '@Url.Action("login", "login")'

                }
    this.loading=false;
            })
        }
    }
  })

</script>